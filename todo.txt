General Idea:
Blockchain spotify
    - store hashes of music files in a smart contract
    - ensure that users must author artists before getting data for a song
    - have an offchain service for allowing an artist to create a new account 
        - with each new account a new contract is deployed to the network with all of the artists songs and funds

https://learn.microsoft.com/en-us/dotnet/architecture/microservices/architect-microservice-container-applications/communication-in-microservice-architecture
architecture:
    - multiple individual services 
        - authentication/user service:
            This service will only store metadata about users to allow for authentication
        - api gateway:
            only service the user's browser can call directly
            serves as a proxy/filter for the other services 
                needs to be highly secure and performant
            keeps track of session data
        - song service:
            - rest api that manages metadata about songs

future plans:
    create cli for interacting with the system

todo:
    move routing to NGINX instance and only leave session management in Gateway service
    
    fix rabbitmq versioning issue 
    
    add versioning to npm packages and dockerfiles
    
    research audio file types and determine which type to use for applicaiton

    create payment service

    automate unit tests

    set up s3 bucket file upload integration tests

    set up production configuration for each service
    
    set up HTTPS
    
    create README

    implement synchronized tokens
        - generate a token server-side on login
        - This token is returned to the user and stored in cookie
        - Every subsequent request must contain the token in a unique request header to perform privileged operations

    implement nodejs security practices:
        https://cheatsheetseries.owasp.org/cheatsheets/Nodejs_Security_Cheat_Sheet.html
    
    s3 security practices
        https://docs.aws.amazon.com/AmazonS3/latest/userguide/security-best-practices.html

    song-service:
        add a input handling/cleaning library (express-validator)

    web-app:
        reduce image size on each song card
    
    user/authentication service:
        https://auth0.com/docs/api/authentication?http#introduction

    API Gateway:
        express' session middleware is not meant for production 
            - search for a compatible session store to pair with the middlware (research)
        look into session hijacking prevention techniques (research)
        add unit tests
        add support for CSRF tokens

 