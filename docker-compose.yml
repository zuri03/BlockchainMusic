version: '3'

services:

  gateway:
    image: gateway
    build: 
      context: ./gateway-service/.
      dockerfile: ./Dockerfile
    ports:
      - '9090:9090'
    container_name: gateway-container
    restart: unless-stopped
    environment:
      - API_KEY=${GATEWAY_API_KEY}
  
  song-service:
    image: song-service
    environment:
       - MONGO_USERNAME=${MONGO_SONG_SERVICE_USERNAME}
       - MONGO_PASSWORD=${MONGO_SONG_SERVICE_PASSWORD}
       - MONGO_DB_NAME=${MONGO_INITDB_DATABASE}
       - AWS_BUCKET_REGION=${AWS_BUCKET_REGION}
       - AWS_BUCKET_NAME=${AWS_BUCKET_NAME}
       - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
       - AWS_SECRET_KEY=${AWS_SECRET_KEY}
       - GATEWAY_API_KEY=${GATEWAY_API_KEY}
    build:
      context: ./song-service/.
      dockerfile: ./Dockerfile
    depends_on:
      - song-mongo
    container_name: song-container
    restart: unless-stopped

  song-mongo:
    image: mongo:latest
    env_file:
      - .env
    volumes:
      - ./scripts/music-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  
  user-service:
    image: user-service
    build:
      context: ./user-service/.
      dockerfile: ./Dockerfile
    environment:
      - MONGO_USERNAME=${MONGO_USER_SERVICE_USERNAME}
      - MONGO_PASSWORD=${MONGO_USER_SERVICE_PASSWORD}
      - MONGO_DB_NAME=${INIT_DATABASE}
      - GATEWAY_API_KEY=${GATEWAY_API_KEY}
    container_name: user-container
    restart: unless-stopped

  user-mongo:
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${INIT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${INIT_PASSWORD}
      - MONGO_INITDB_DATABASE=${INIT_DATABASE}
      - MONGO_USER_SERVICE_USERNAME=${MONGO_USER_SERVICE_USERNAME}
      - MONGO_USER_SERVICE_PASSWORD=${MONGO_USER_SERVICE_PASSWORD}
    volumes:
      - ./scripts/user-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  